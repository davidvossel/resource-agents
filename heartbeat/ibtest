#!/bin/sh
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of version 2 of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# Further, this software is distributed without any warranty that it is
# free of the rightful claim of any third person regarding infringement
# or the like.  Any license provided herein, whether implied or
# otherwise, applies only to this software file.  Patent licenses, if
# any, provided herein do not apply to combinations of this program with
# other software, or any other product whatsoever.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc., 59 Temple Place - Suite 330, Boston MA 02111-1307, USA.
#

#######################################################################
# Initialization:

: ${OCF_FUNCTIONS_DIR=${OCF_ROOT}/lib/heartbeat}
. ${OCF_FUNCTIONS_DIR}/ocf-shellfuncs

#######################################################################

meta_data() {
	cat <<END
<?xml version="1.0"?>
<!DOCTYPE resource-agent SYSTEM "ra-api-1.dtd">
<resource-agent name="ibtest" version="0.9">
<version>1.0</version>

<longdesc lang="en">
test
</longdesc>
<shortdesc lang="en">infiniband test resource agent</shortdesc>

<parameters>
<parameter name="interface" required="1">
<longdesc lang="en">
interface
</longdesc>
<shortdesc lang="en">interface</shortdesc>
<content type="string" />
</parameter>

</parameters>

<actions>
<action name="start"		timeout="20" />
<action name="stop"		 timeout="20" />
<action name="monitor"	  timeout="20" interval="10" depth="0" />
<action name="reload"	   timeout="20" />
<action name="migrate_to"   timeout="20" />
<action name="migrate_from" timeout="20" />
<action name="meta-data"	timeout="5" />
<action name="validate-all"   timeout="20" />
</actions>
</resource-agent>
END
}

#######################################################################

ib_test_usage() {
	cat <<END
usage: $0 {start|stop|monitor|validate-all|meta-data}

Expects to have a fully populated OCF RA-compliant environment set.
END
}

ib_test_start() {
	local rc
	ib_test_monitor
	rc=$?
	if [ $rc -eq $OCF_NOT_RUNNING ]; then
		touch ${OCF_RESKEY_state}
		rc=$OCF_SUCCESS
	fi
	return $rc 
}

ib_test_stop() {
	rm -f ${OCF_RESKEY_state} > /dev/null 2>&1
	return $OCF_SUCCESS
}

ib_test_monitor() {
	local rc=$OCF_SUCCESS
	
	if ! [ -f ${OCF_RESKEY_state} ]; then
		return $OCF_NOT_RUNNING
	fi

	# TODO dell, add your IB logic here.
	# if IB fails, set rc to $OCF_ERR_GENERIC
	# the interface will be passed in as $OCF_RESKEY_interface
	# 

	return $rc
}

ib_test_validate() {
	
	# Is the state directory writable? 
	state_dir=`dirname "$OCF_RESKEY_state"`
	touch "$state_dir/$$"
	if [ $? != 0 ]; then
		return $OCF_ERR_ARGS
	fi
	rm "$state_dir/$$"

	return $OCF_SUCCESS
}

: ${OCF_RESKEY_state=${HA_RSCTMP}/ibtest-${OCF_RESOURCE_INSTANCE}.state}

case $__OCF_ACTION in
meta-data)	meta_data
		exit $OCF_SUCCESS
		;;
start)		ib_test_start;;
stop)		ib_test_stop;;
monitor)	ib_test_monitor;;
validate-all)	ib_test_validate;;
usage|help)	ib_test_usage
		exit $OCF_SUCCESS
		;;
*)		ib_test_usage
		exit $OCF_ERR_UNIMPLEMENTED
		;;
esac
rc=$?
ocf_log debug "${OCF_RESOURCE_INSTANCE} $__OCF_ACTION : $rc"
exit $rc

